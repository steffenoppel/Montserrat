name: yearly analysis # name of my workflow 

on: 
  # schedule: 
  #   - cron: "14 0 6 6 *" # triggers the workflow every year on the first of June at midnight; 0 0  (00:00 Midnight), 1 (first day of month), 6 (June), * (every year)

  push: 
    paths: 
      - 'Montserrat/data/**' # triggers a workflow every time a new file is added to the data folder in the repository
      
  workflow_dispatch:  # This allows manual triggering of the workflow
    inputs: # to manually set values for the workflow run as n.samples, burn-in or n.chains
      iter: 
        description: "Number of samples for each N-mixture model in NIMBLE"
        required: true
        default: "250000" # this gives the default number of samples
      burnin: 
        description: "Number of burn-in iterations for each N-mixture model in NIMBLE"
        required: true
        default: "100000"
      chains: 
        description: "Number of chains for each N-mixture model in NIMBLE"
        required: true
        default: "3"
 
jobs: # define jobs
  job_data_preparation: # set the name of a below defined job ## COMMENTED OUT BECAUSE NOT POSSIBLE TO AUTOMATE
    runs-on: macos-latest # set Environment for the job, here use windows as the virtual machine environment

    steps:
      - name: Checkout repository # provide a name for this step within the job
        uses: actions/checkout@v3

      - name: Set up R environment
        uses: r-lib/actions/setup-r@v2

      - name: Install R dependencies
        run: |
          Rscript -e 'install.packages(c("tidyverse", "data.table", "nimble"))'
          Rscript -e 'filter <- dplyr::filter; select <- dplyr::select; rename <- dplyr::rename'

      - name: Run data preparation for Nmix models in NIMBLE
        run: |
          Rscript 'Montserrat_forest_bird_monitoring_data_prep.R'

      - name: Configure git # this code is needed to make the created RData with all prepared data in the workflow available in the repo outside any git actions
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes to git repository
        run: |
          git add data/MONTSERRAT_ANNUAL_DATA_INPUT.RData
          git commit -m "Automatically prepared data for Montserrat Forest Monitoring analysis" || echo "No changes to commit" # the echo ensures that even if there are no changes, and no commit is performed, the workflow wont fail

      - name: Pull latest changes from main
        run: |
          git fetch origin main
          git merge --no-edit origin/main

      - name: Push changes to the repository
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_Montserrat }}
        run: |
          git push origin HEAD:main --force

  job_data_preparation_nimble: # start another job
    runs-on: macos-latest
    needs: job_data_preparation # set dependency to first job because the output of this job is needed for the current one

    steps:
      - name: Checkout repository # provide a name for this step within the job
        uses: actions/checkout@v3

      - name: Set up R environment
        uses: r-lib/actions/setup-r@v2

      - name: Install R dependencies
        run: |
          Rscript -e 'install.packages(c("tidyverse", "data.table", "nimble"))'
          Rscript -e 'filter <- dplyr::filter; select <- dplyr::select; rename <- dplyr::rename'

      - name: Echo input values for debugging
        run: |
          echo "n.iter: ${{ github.event.inputs.iter }}"
          echo "n.burnin: ${{ github.event.inputs.burnin }}"
          echo "n.chains: ${{ github.event.inputs.chains }}"

      - name: Run general data preparation
        run: |
          echo 'MCMC settings are going to be defined with ${{ github.event.inputs.iter }} iterations, \ ${{ github.event.inputs.burnin }} samples for the burn-in and \ ${{ github.event.inputs.chains }} chains. \ The thinning is pre-set to 10.' # just a message to remind on the MCMC settings
          Rscript Montserrat_forest_bird_monitoring_data_prep_Nmix_model_def_nimble.R ${{ github.event.inputs.iter }} ${{ github.event.inputs.burnin }} ${{ github.event.inputs.chains }} # run RScript to prepare data for Nmix models in NIMBLE and makes the ariables github.event.inputs.(name of the input) available
        
      - name: Configure git # this code is needed to make the created RData with all prepared data in the workflow available in the repo outside any git actions
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes to git repository
        run: |
          git add data/Montserrat_forest_bird_monitoring_yearly_NIMBLE_model_data.RData
          git commit -m "Automatically prepared NIMBLE input data" || echo "No changes to commit" # the echo ensures that even if there are no changes, and no commit is performed, the workflow wont fail

      - name: Pull latest changes from main
        run: |
          git fetch origin main
          git merge --no-edit origin/main

      - name: Push changes to the repository
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_Montserrat }}
        run: |
          git push origin HEAD:main --force
          
      - name: Pass prepared data and defined model to next job # using artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prepared data and defined NIMBLE model
          path: data/Montserrat_forest_bird_monitoring_yearly_NIMBLE_model_data.RData
          retention-days: 1 # this sets the time for how long the artifact is saved under the artifact link

  job_run_Nmix_model:
    runs-on: macos-latest 
    needs: job_data_preparation_nimble
    strategy:
      matrix: # starts a matrix process where multiple jobs (one for each species) run simultaneously 
        SPECIES: ["MTOR", "FOTH", "BRQD", "TREM", "ACHU", "PTCA", "PETH", "GTCA", "SBTH", "SNPI", "CAEL", "BANA"] # set all species for which this job aka running the Nmix model in NIMBLE should be performed
    
    steps: 
      - name: Checkout repository 
        uses: actions/checkout@v3

      - name: Get prepared data and defined model from previous job # using artifacts
        uses: actions/download-artifact@v4
        with: 
          name: prepared data and defined NIMBLE model 
          path: data/  # Specify the destination directory

      - name: Set up R environment
        uses: r-lib/actions/setup-r@v2

      - name: Install R dependencies 
        run: | 
          Rscript -e 'install.packages(c("tidyverse", "data.table", "nimble", "lubridate", "MCMCvis"))' 
          Rscript -e 'filter <- dplyr::filter; select <- dplyr::select; rename <- dplyr::rename'

      - name: Run Nmix model in NIMBLE for ${{ matrix.SPECIES }}
        env: # create an environment variable that is passed in this step
          SPECIES: ${{ matrix.SPECIES }}
        run: |
          Rscript 'Montserrat_forest_bird_monitoring_run_Nmix_nimble.R' ${{ matrix.SPECIES }}

      - name: Upload model output
        uses: actions/upload-artifact@v4
        with:
          name: output-${{ matrix.SPECIES }}
          path: |
            output/${{ matrix.SPECIES }}_trend_model_nimble.rds
            output/${{ matrix.SPECIES }}_trend_estimates.csv

  job_merge_outputs_and_commit:
    runs-on: ubuntu-latest
    needs: job_run_Nmix_model
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download all model outputs
        uses: actions/download-artifact@v4
        with:
          path: output/

      - name: Move files to output directory
        run: |
          mkdir -p output
          find output -type f -name "*.rds" -exec mv {} output/ \;
          find output -type f -name "*.csv" -exec mv {} output/ \;

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push all outputs
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_Montserrat }}
        run: |
          git add output/
          git commit -m "Add all Nmix model outputs from matrix jobs" || echo "No changes to commit"
          git pull --rebase origin main
          git push origin HEAD:main


  job_create_plot_report: # start another job
    runs-on: macos-latest
    needs: job_run_Nmix_model # set dependency to first job because the output of this job is needed for the current one 
    
    steps:
      - name: Checkout repository # provide a name for this step within the job
        uses: actions/checkout@v3

      - name: Set up R environment
        uses: r-lib/actions/setup-r@v2

      - name: Set up Pandoc # install pandoc for rendering an rmd 
        uses: r-lib/actions/setup-pandoc@v2

      - name: Install XQuartz # this seems to be needed on MacOS for a few graphical functions in R
        run: brew install --cask xquartz

      - name: Install R dependencies 
        run: | 
          Rscript -e 'install.packages(c("tidyverse", "data.table", "rmarkdown", "knitr", "nimble", "kableExtra"))' 
          Rscript -e 'filter <- dplyr::filter; select <- dplyr::select; rename <- dplyr::rename'

      - name: Run general data preparation 
        run: Rscript 'Montserrat_forest_bird_monitoring_create_summary_table_plot_report.R' # run RScript to prepare data for Nmix models in NIMBLE

      - name: Get YEAR variable # to only push these files with the correct YEAR
        run: |
          ls -l  # Lists files to confirm YEAR.txt is present
          echo "YEAR=$(cat YEAR.txt)" >> $GITHUB_ENV # get YEAR from txt file as object in git environment

      - name: Configure git # this code is needed to make the created RData with all prepared data in the workflow available in the repo outside any git actions 
        run: |
          git config --global user.name "github-actions[bot]" 
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes to git repository 
        env: 
          YEAR: ${{ env.YEAR }}
        run: |
          git add output/Annual_estimates.csv # this will overwrite the outputs every year!
          git add output/Trend_estimates.csv
          git add output/Annual_estimates_mapdata.csv
          git add output/Montserrat_ForestBird_Trends${YEAR}.pdf # ERROR: if envYEAR != lastMonitoringYEAR -> ERROR this will lead to a library of annual reports and trend plots for every year
          git add output/Montserrat_ForestBird_AnnualReport_${YEAR}.html
          git commit -m "Summary tables of annual estimates, trends and plot from Nmix calculated in git actions workflow" || echo "No changes to commit" # the echo ensures that even if there are no changes, and no commit is performed, the workflow wont fail


      - name: Push changes to the repository
        env: 
          GITHUB_TOKEN: ${{ secrets.PAT_Montserrat }}
        run: |
          git pull --rebase origin main
          git push origin HEAD:main
